\name{predict.SL.hal}
\alias{predict.SL.hal}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Prediction Method for SL.hal Objects
}
\description{
This function provides a prediction method for objects of class \code{SL.hal}, which are fitted Highly Adaptive Lasso (HAL) models wrapped within the \code{SuperLearner} framework. It uses the fitted HAL model to generate predictions on new data.
}
\usage{
\method{predict}{SL.hal}(object, newdata, ...)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{object}{
  A fitted object of class \code{SL.hal}, typically produced by the \code{SL.hal} function within the \code{SuperLearner} framework.
}
  \item{newdata}{
  A \code{matrix} or \code{data.frame} of new observations on which to obtain predictions. The new data will be automatically converted to a matrix if not already in that format.
}
  \item{\dots}{
  Additional arguments (currently not used).
}
}
\details{
The \code{predict.SL.hal} function extracts the fitted HAL model from the \code{SL.hal} object and generates predictions on the supplied new data. If \code{newdata} is not a matrix, it is automatically converted to ensure compatibility with the HAL model's \code{predict} method.
}
\value{
A \code{numeric} vector of predicted values corresponding to the rows in \code{newdata}. The predictions are generated by the fitted HAL model contained within the \code{SL.hal} object.
}
\references{
Benkeser, D., & van der Laan, M. J. (2016). The highly adaptive lasso estimator.

The \code{hal9001} package: \url{https://github.com/tlverse/hal9001}
}
\author{
Michael Schomaker, Han Bao
}
\note{
Ensure that the \code{object} provided is a valid \code{SL.hal} object, as this function specifically relies on the structure of the HAL model fitted by the \code{SL.hal} function.
}

\seealso{
\code{\link{SL.hal}}, \code{\link[hal9001]{fit_hal}}, \code{\link[SuperLearner]{SuperLearner}}
}
\examples{
# Generate a synthetic dataset
set.seed(123)
n <- 200 # number of observations
p <- 10  # number of predictors
data_matrix <- matrix(rnorm(n * p), nrow = n, ncol = p)
colnames(data_matrix) <- paste0("X", 1:p)
response <- 3 * data_matrix[,1] - 2 * data_matrix[,2] + rnorm(n) # Generate response variable

# Split the data into training and testing sets
set.seed(123) # for reproducibility of the split
train_indices <- sample(1:n, size = 0.7 * n) # 70% for training
test_indices <- setdiff(1:n, train_indices) # Remaining 30% for testing

# Create training and testing datasets
X_train <- data_matrix[train_indices, ]
Y_train <- response[train_indices]
X_test <- data_matrix[test_indices, ]

# Fit the HAL model using the SL.hal function
fit_result <- SL.hal(Y = Y_train, X = X_train, newX = NULL, family = stats::gaussian())

# Use the predict.SL.hal function to generate predictions on new data
predictions <- predict(fit_result$fit, newdata = X_test)

# Print the predictions
print(predictions)
}
\keyword{prediction}
\keyword{regression}
\concept{Highly Adaptive Lasso}
\concept{SuperLearner}
